{
    "policy_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVMAAAAAAAAACMHnN0YWJsZV9iYXNlbGluZXMzLnNhYy5wb2xpY2llc5SMCVNBQ1BvbGljeZSTlC4=",
        "__module__": "stable_baselines3.sac.policies",
        "__annotations__": "{'actor': <class 'stable_baselines3.sac.policies.Actor'>, 'critic': <class 'stable_baselines3.common.policies.ContinuousCritic'>, 'critic_target': <class 'stable_baselines3.common.policies.ContinuousCritic'>}",
        "__doc__": "\n    Policy class (with both actor and critic) for SAC.\n\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param lr_schedule: Learning rate schedule (could be constant)\n    :param net_arch: The specification of the policy and value networks.\n    :param activation_fn: Activation function\n    :param use_sde: Whether to use State Dependent Exploration or not\n    :param log_std_init: Initial value for the log standard deviation\n    :param use_expln: Use ``expln()`` function instead of ``exp()`` when using gSDE to ensure\n        a positive standard deviation (cf paper). It allows to keep variance\n        above zero and prevent it from growing too fast. In practice, ``exp()`` is usually enough.\n    :param clip_mean: Clip the mean output when using gSDE to avoid numerical instability.\n    :param features_extractor_class: Features extractor to use.\n    :param features_extractor_kwargs: Keyword arguments\n        to pass to the features extractor.\n    :param normalize_images: Whether to normalize images or not,\n         dividing by 255.0 (True by default)\n    :param optimizer_class: The optimizer to use,\n        ``th.optim.Adam`` by default\n    :param optimizer_kwargs: Additional keyword arguments,\n        excluding the learning rate, to pass to the optimizer\n    :param n_critics: Number of critic networks to create.\n    :param share_features_extractor: Whether to share or not the features extractor\n        between the actor and the critic (this saves computation time)\n    ",
        "__init__": "<function SACPolicy.__init__ at 0x797177a0c820>",
        "_build": "<function SACPolicy._build at 0x797177a0c8b0>",
        "_get_constructor_parameters": "<function SACPolicy._get_constructor_parameters at 0x797177a0c940>",
        "reset_noise": "<function SACPolicy.reset_noise at 0x797177a0c9d0>",
        "make_actor": "<function SACPolicy.make_actor at 0x797177a0ca60>",
        "make_critic": "<function SACPolicy.make_critic at 0x797177a0caf0>",
        "forward": "<function SACPolicy.forward at 0x797177a0cb80>",
        "_predict": "<function SACPolicy._predict at 0x797177a0cc10>",
        "set_training_mode": "<function SACPolicy.set_training_mode at 0x797177a0cca0>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x7971c92a0400>"
    },
    "verbose": 2,
    "policy_kwargs": {
        "use_sde": false
    },
    "num_timesteps": 2000000,
    "_total_timesteps": 2000000,
    "_num_timesteps_at_start": 0,
    "seed": null,
    "action_noise": null,
    "start_time": 1741499859100415779,
    "learning_rate": 0.0003,
    "tensorboard_log": "./logs/tensorboard/",
    "_last_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWViQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYUAAAAAAAAAAAA0kPxdKlDaQ49Q3rWfj+NNB9BlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwWGlIwBQ5R0lFKULg=="
    },
    "_last_episode_starts": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWVdAAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYBAAAAAAAAAAGUjAVudW1weZSMBWR0eXBllJOUjAJiMZSJiIeUUpQoSwOMAXyUTk5OSv////9K/////0sAdJRiSwGFlIwBQ5R0lFKULg=="
    },
    "_last_original_obs": {
        ":type:": "<class 'numpy.ndarray'>",
        ":serialized:": "gAWViQAAAAAAAACMEm51bXB5LmNvcmUubnVtZXJpY5SMC19mcm9tYnVmZmVylJOUKJYUAAAAAAAAAAAA0kOG9ahDIBszQ3rWfj+NNB9BlIwFbnVtcHmUjAVkdHlwZZSTlIwCZjSUiYiHlFKUKEsDjAE8lE5OTkr/////Sv////9LAHSUYksBSwWGlIwBQ5R0lFKULg=="
    },
    "_episode_num": 40804,
    "use_sde": false,
    "sde_sample_freq": -1,
    "_current_progress_remaining": 0.0,
    "_stats_window_size": 100,
    "ep_info_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "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"
    },
    "ep_success_buffer": {
        ":type:": "<class 'collections.deque'>",
        ":serialized:": "gAWVIAAAAAAAAACMC2NvbGxlY3Rpb25zlIwFZGVxdWWUk5QpS2SGlFKULg=="
    },
    "_n_updates": 1999900,
    "observation_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWV2AEAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLBYWUjANsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWFAAAAAAAAAAAAAAAAAAAAAAAAAAAAID/AACA/5RoCksFhZSMAUOUdJRSlIwNYm91bmRlZF9iZWxvd5RoEiiWBQAAAAAAAAABAQEAAJRoB4wCYjGUiYiHlFKUKEsDjAF8lE5OTkr/////Sv////9LAHSUYksFhZRoFXSUUpSMBGhpZ2iUaBIolhQAAAAAAAAAAAAgRAAAIEQAAPBDAACAfwAAgH+UaApLBYWUaBV0lFKUjA1ib3VuZGVkX2Fib3ZllGgSKJYFAAAAAAAAAAEBAQAAlGgcSwWFlGgVdJRSlIwIbG93X3JlcHKUjBpbICAwLiAgIDAuICAgMC4gLWluZiAtaW5mXZSMCWhpZ2hfcmVwcpSMGls2NDAuIDY0MC4gNDgwLiAgaW5mICBpbmZdlIwKX25wX3JhbmRvbZROdWIu",
        "dtype": "float32",
        "_shape": [
            5
        ],
        "low": "[  0.   0.   0. -inf -inf]",
        "bounded_below": "[ True  True  True False False]",
        "high": "[640. 640. 480.  inf  inf]",
        "bounded_above": "[ True  True  True False False]",
        "low_repr": "[  0.   0.   0. -inf -inf]",
        "high_repr": "[640. 640. 480.  inf  inf]",
        "_np_random": null
    },
    "action_space": {
        ":type:": "<class 'gymnasium.spaces.box.Box'>",
        ":serialized:": "gAWVSQIAAAAAAACMFGd5bW5hc2l1bS5zcGFjZXMuYm94lIwDQm94lJOUKYGUfZQojAVkdHlwZZSMBW51bXB5lGgFk5SMAmY0lImIh5RSlChLA4wBPJROTk5K/////0r/////SwB0lGKMBl9zaGFwZZRLAYWUjANsb3eUjBJudW1weS5jb3JlLm51bWVyaWOUjAtfZnJvbWJ1ZmZlcpSTlCiWBAAAAAAAAAAAAEjClGgKSwGFlIwBQ5R0lFKUjA1ib3VuZGVkX2JlbG93lGgSKJYBAAAAAAAAAAGUaAeMAmIxlImIh5RSlChLA4wBfJROTk5K/////0r/////SwB0lGJLAYWUaBV0lFKUjARoaWdolGgSKJYEAAAAAAAAAAAASEKUaApLAYWUaBV0lFKUjA1ib3VuZGVkX2Fib3ZllGgSKJYBAAAAAAAAAAGUaBxLAYWUaBV0lFKUjAhsb3dfcmVwcpSMBS01MC4wlIwJaGlnaF9yZXBylIwENTAuMJSMCl9ucF9yYW5kb22UjBRudW1weS5yYW5kb20uX3BpY2tsZZSMEF9fZ2VuZXJhdG9yX2N0b3KUk5SMBVBDRzY0lGgxjBRfX2JpdF9nZW5lcmF0b3JfY3RvcpSTlIaUUpR9lCiMDWJpdF9nZW5lcmF0b3KUjAVQQ0c2NJSMBXN0YXRllH2UKGg8ihHRoloCXFKoRja7bpj3pejsAIwDaW5jlIoQb+5bkAw92FGcQWETH+NaL3WMCmhhc191aW50MzKUSwCMCHVpbnRlZ2VylEsAdWJ1Yi4=",
        "dtype": "float32",
        "_shape": [
            1
        ],
        "low": "[-50.]",
        "bounded_below": "[ True]",
        "high": "[50.]",
        "bounded_above": "[ True]",
        "low_repr": "-50.0",
        "high_repr": "50.0",
        "_np_random": "Generator(PCG64)"
    },
    "n_envs": 1,
    "buffer_size": 1000000,
    "batch_size": 4096,
    "learning_starts": 100,
    "tau": 0.005,
    "gamma": 0.99,
    "gradient_steps": 1,
    "optimize_memory_usage": false,
    "replay_buffer_class": {
        ":type:": "<class 'abc.ABCMeta'>",
        ":serialized:": "gAWVNQAAAAAAAACMIHN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi5idWZmZXJzlIwMUmVwbGF5QnVmZmVylJOULg==",
        "__module__": "stable_baselines3.common.buffers",
        "__annotations__": "{'observations': <class 'numpy.ndarray'>, 'next_observations': <class 'numpy.ndarray'>, 'actions': <class 'numpy.ndarray'>, 'rewards': <class 'numpy.ndarray'>, 'dones': <class 'numpy.ndarray'>, 'timeouts': <class 'numpy.ndarray'>}",
        "__doc__": "\n    Replay buffer used in off-policy algorithms like SAC/TD3.\n\n    :param buffer_size: Max number of element in the buffer\n    :param observation_space: Observation space\n    :param action_space: Action space\n    :param device: PyTorch device\n    :param n_envs: Number of parallel environments\n    :param optimize_memory_usage: Enable a memory efficient variant\n        of the replay buffer which reduces by almost a factor two the memory used,\n        at a cost of more complexity.\n        See https://github.com/DLR-RM/stable-baselines3/issues/37#issuecomment-637501195\n        and https://github.com/DLR-RM/stable-baselines3/pull/28#issuecomment-637559274\n        Cannot be used in combination with handle_timeout_termination.\n    :param handle_timeout_termination: Handle timeout termination (due to timelimit)\n        separately and treat the task as infinite horizon task.\n        https://github.com/DLR-RM/stable-baselines3/issues/284\n    ",
        "__init__": "<function ReplayBuffer.__init__ at 0x797177b76830>",
        "add": "<function ReplayBuffer.add at 0x797177b768c0>",
        "sample": "<function ReplayBuffer.sample at 0x797177b76950>",
        "_get_samples": "<function ReplayBuffer._get_samples at 0x797177b769e0>",
        "_maybe_cast_dtype": "<staticmethod(<function ReplayBuffer._maybe_cast_dtype at 0x797177b76a70>)>",
        "__abstractmethods__": "frozenset()",
        "_abc_impl": "<_abc._abc_data object at 0x797177b7c2c0>"
    },
    "replay_buffer_kwargs": {},
    "train_freq": {
        ":type:": "<class 'stable_baselines3.common.type_aliases.TrainFreq'>",
        ":serialized:": "gAWVYQAAAAAAAACMJXN0YWJsZV9iYXNlbGluZXMzLmNvbW1vbi50eXBlX2FsaWFzZXOUjAlUcmFpbkZyZXGUk5RLAWgAjBJUcmFpbkZyZXF1ZW5jeVVuaXSUk5SMBHN0ZXCUhZRSlIaUgZQu"
    },
    "use_sde_at_warmup": false,
    "target_entropy": -1.0,
    "ent_coef": "auto",
    "target_update_interval": 1,
    "lr_schedule": {
        ":type:": "<class 'function'>",
        ":serialized:": "gAWVpQMAAAAAAACMF2Nsb3VkcGlja2xlLmNsb3VkcGlja2xllIwOX21ha2VfZnVuY3Rpb26Uk5QoaACMDV9idWlsdGluX3R5cGWUk5SMCENvZGVUeXBllIWUUpQoSwFLAEsASwFLA0sTQwx0AIgAfACDAYMBUwCUToWUjAVmbG9hdJSFlIwScHJvZ3Jlc3NfcmVtYWluaW5nlIWUjFMvaG9tZS90aHhzc2lvLy5sb2NhbC9saWIvcHl0aG9uMy4xMC9zaXRlLXBhY2thZ2VzL3N0YWJsZV9iYXNlbGluZXMzL2NvbW1vbi91dGlscy5weZSMCDxsYW1iZGE+lEtiQwIMAJSMDnZhbHVlX3NjaGVkdWxllIWUKXSUUpR9lCiMC19fcGFja2FnZV9flIwYc3RhYmxlX2Jhc2VsaW5lczMuY29tbW9ulIwIX19uYW1lX1+UjB5zdGFibGVfYmFzZWxpbmVzMy5jb21tb24udXRpbHOUjAhfX2ZpbGVfX5SMUy9ob21lL3RoeHNzaW8vLmxvY2FsL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvc3RhYmxlX2Jhc2VsaW5lczMvY29tbW9uL3V0aWxzLnB5lHVOTmgAjBBfbWFrZV9lbXB0eV9jZWxslJOUKVKUhZR0lFKUaACMEl9mdW5jdGlvbl9zZXRzdGF0ZZSTlGghfZR9lChoGIwIPGxhbWJkYT6UjAxfX3F1YWxuYW1lX1+UjCFnZXRfc2NoZWR1bGVfZm4uPGxvY2Fscz4uPGxhbWJkYT6UjA9fX2Fubm90YXRpb25zX1+UfZSMDl9fa3dkZWZhdWx0c19flE6MDF9fZGVmYXVsdHNfX5ROjApfX21vZHVsZV9flGgZjAdfX2RvY19flE6MC19fY2xvc3VyZV9flGgAjApfbWFrZV9jZWxslJOUaAIoaAcoSwFLAEsASwFLAUsTQwSIAFMAlGgJKYwBX5SFlGgOjARmdW5jlEuGQwIEAZSMA3ZhbJSFlCl0lFKUaBVOTmgdKVKUhZR0lFKUaCNoPn2UfZQoaBiMBGZ1bmOUaCeMGWNvbnN0YW50X2ZuLjxsb2NhbHM+LmZ1bmOUaCl9lGgrTmgsTmgtaBloLk5oL2gxRz8zqSowVTJhhZRSlIWUjBdfY2xvdWRwaWNrbGVfc3VibW9kdWxlc5RdlIwLX19nbG9iYWxzX1+UfZR1hpSGUjCFlFKUhZRoR12UaEl9lHWGlIZSMC4="
    },
    "batch_norm_stats": [],
    "batch_norm_stats_target": []
}